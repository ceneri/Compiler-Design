-- popen (/usr/bin/cpp -nostdinc 11-numbers.oc), fileno(yyin) = 3
Starting parse
Entering state 0
Reducing stack by rule 7 (line 62):
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --(end of buffer or a NUL)
--accepting rule at line 34 ("# 1 "11-numbers.oc"")
--accepting rule at line 36 ("
")
--accepting rule at line 34 ("# 1 "<built-in>"")
--accepting rule at line 36 ("
")
--accepting rule at line 34 ("# 1 "<command-line>"")
--accepting rule at line 36 ("
")
--accepting rule at line 34 ("# 1 "11-numbers.oc"")
--accepting rule at line 36 ("
")
--accepting rule at line 36 ("
")
--accepting rule at line 36 ("
")
--accepting rule at line 34 ("# 1 "oclib.oh" 1")
--accepting rule at line 36 ("
")
--accepting rule at line 34 ("# 28 "oclib.oh"")
--accepting rule at line 36 ("
")
--accepting rule at line 71 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 14 (line 94):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 78 ("__assert_fail")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 65
Reducing stack by rule 26 (line 146):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 50 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 66
Reading a token: --accepting rule at line 69 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 8
Reducing stack by rule 16 (line 96):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2 28 66
Entering state 26
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 78 ("expr")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 65
Reducing stack by rule 26 (line 146):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 66
Entering state 102
Reducing stack by rule 24 (line 135):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm params ()
Stack now 0 2 28
Entering state 68
Reading a token: --accepting rule at line 47 (",")
Next token is token ',' ()
Shifting token ',' ()
Entering state 105
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 69 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 8
Reducing stack by rule 16 (line 96):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2 28 68 105
Entering state 26
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 78 ("file")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 65
Reducing stack by rule 26 (line 146):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 68 105
Entering state 136
Reducing stack by rule 23 (line 131):
   $1 = nterm params ()
   $2 = token ',' ()
   $3 = nterm identdecl ()
Deleting astree (0x7b3c60->{',' 5.28.32 ",":)
-> $$ = nterm params ()
Stack now 0 2 28
Entering state 68
Reading a token: --accepting rule at line 47 (",")
Next token is token ',' ()
Shifting token ',' ()
Entering state 105
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 67 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 7
Reducing stack by rule 15 (line 95):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 28 68 105
Entering state 26
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 78 ("line")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 65
Reducing stack by rule 26 (line 146):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 68 105
Entering state 136
Reducing stack by rule 23 (line 131):
   $1 = nterm params ()
   $2 = token ',' ()
   $3 = nterm identdecl ()
Deleting astree (0x7b3c60->{',' 5.28.45 ",":)
-> $$ = nterm params ()
Stack now 0 2 28
Entering state 68
Reading a token: --accepting rule at line 51 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 104
Reading a token: --accepting rule at line 49 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 134
Reducing stack by rule 21 (line 114):
   $1 = nterm identdecl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
Deleting astree (0x7b3c60->{')' 5.28.55 ")":)
Deleting astree (0x7b4180->{';' 5.28.56 ";":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 58):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 71 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 14 (line 94):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 78 ("putb")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 65
Reducing stack by rule 26 (line 146):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 50 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 66
Reading a token: --accepting rule at line 67 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 7
Reducing stack by rule 15 (line 95):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 28 66
Entering state 26
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 78 ("b")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 65
Reducing stack by rule 26 (line 146):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 66
Entering state 102
Reducing stack by rule 24 (line 135):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm params ()
Stack now 0 2 28
Entering state 68
Reading a token: --accepting rule at line 51 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 104
Reading a token: --accepting rule at line 49 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 134
Reducing stack by rule 21 (line 114):
   $1 = nterm identdecl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
Deleting astree (0x7b4590->{')' 5.29.17 ")":)
Deleting astree (0x7b4640->{';' 5.29.18 ";":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 58):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 71 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 14 (line 94):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 78 ("putc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 65
Reducing stack by rule 26 (line 146):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 50 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 66
Reading a token: --accepting rule at line 67 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 7
Reducing stack by rule 15 (line 95):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 28 66
Entering state 26
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 78 ("c")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 65
Reducing stack by rule 26 (line 146):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 66
Entering state 102
Reducing stack by rule 24 (line 135):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm params ()
Stack now 0 2 28
Entering state 68
Reading a token: --accepting rule at line 51 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 104
Reading a token: --accepting rule at line 49 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 134
Reducing stack by rule 21 (line 114):
   $1 = nterm identdecl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
Deleting astree (0x7b49b0->{')' 5.30.17 ")":)
Deleting astree (0x7b4a60->{';' 5.30.18 ";":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 58):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 71 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 14 (line 94):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 78 ("puti")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 65
Reducing stack by rule 26 (line 146):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 50 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 66
Reading a token: --accepting rule at line 67 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 7
Reducing stack by rule 15 (line 95):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 28 66
Entering state 26
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 78 ("i")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 65
Reducing stack by rule 26 (line 146):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 66
Entering state 102
Reducing stack by rule 24 (line 135):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm params ()
Stack now 0 2 28
Entering state 68
Reading a token: --accepting rule at line 51 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 104
Reading a token: --accepting rule at line 49 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 134
Reducing stack by rule 21 (line 114):
   $1 = nterm identdecl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
Deleting astree (0x7b4de0->{')' 5.31.17 ")":)
Deleting astree (0x7b4e90->{';' 5.31.18 ";":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 58):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 71 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 14 (line 94):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 78 ("puts")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 65
Reducing stack by rule 26 (line 146):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 50 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 66
Reading a token: --accepting rule at line 69 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 8
Reducing stack by rule 16 (line 96):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2 28 66
Entering state 26
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 78 ("s")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 65
Reducing stack by rule 26 (line 146):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 66
Entering state 102
Reducing stack by rule 24 (line 135):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm params ()
Stack now 0 2 28
Entering state 68
Reading a token: --accepting rule at line 51 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 104
Reading a token: --accepting rule at line 49 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 134
Reducing stack by rule 21 (line 114):
   $1 = nterm identdecl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
Deleting astree (0x7b5200->{')' 5.32.20 ")":)
Deleting astree (0x7b52b0->{';' 5.32.21 ";":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 58):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 71 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 14 (line 94):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 78 ("endl")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 65
Reducing stack by rule 26 (line 146):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 50 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 66
Reading a token: --accepting rule at line 51 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 101
Reading a token: --accepting rule at line 49 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 131
Reducing stack by rule 22 (line 120):
   $1 = nterm identdecl ()
   $2 = token '(' ()
   $3 = token ')' ()
   $4 = token ';' ()
Deleting astree (0x7b54e0->{')' 5.33.12 ")":)
Deleting astree (0x7b5560->{';' 5.33.13 ";":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 58):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 67 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 7
Reducing stack by rule 15 (line 95):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 78 ("getc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 65
Reducing stack by rule 26 (line 146):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 50 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 66
Reading a token: --accepting rule at line 51 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 101
Reading a token: --accepting rule at line 49 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 131
Reducing stack by rule 22 (line 120):
   $1 = nterm identdecl ()
   $2 = token '(' ()
   $3 = token ')' ()
   $4 = token ';' ()
Deleting astree (0x7b5770->{')' 5.34.11 ")":)
Deleting astree (0x7b57f0->{';' 5.34.12 ";":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 58):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 69 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 8
Reducing stack by rule 16 (line 96):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 78 ("getw")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 65
Reducing stack by rule 26 (line 146):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 50 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 66
Reading a token: --accepting rule at line 51 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 101
Reading a token: --accepting rule at line 49 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 131
Reducing stack by rule 22 (line 120):
   $1 = nterm identdecl ()
   $2 = token '(' ()
   $3 = token ')' ()
   $4 = token ';' ()
Deleting astree (0x7b5ae0->{')' 5.35.14 ")":)
Deleting astree (0x7b5b60->{';' 5.35.15 ";":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 58):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 69 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 8
Reducing stack by rule 16 (line 96):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 78 ("getln")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 65
Reducing stack by rule 26 (line 146):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 50 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 66
Reading a token: --accepting rule at line 51 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 101
Reading a token: --accepting rule at line 49 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 131
Reducing stack by rule 22 (line 120):
   $1 = nterm identdecl ()
   $2 = token '(' ()
   $3 = token ')' ()
   $4 = token ';' ()
Deleting astree (0x7b5d50->{')' 5.36.15 ")":)
Deleting astree (0x7b5dd0->{';' 5.36.16 ";":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 58):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 69 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 8
Reducing stack by rule 16 (line 96):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 61 ("[]")
Next token is token TOK_ARRAY ()
Shifting token TOK_ARRAY ()
Entering state 64
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 78 ("getargv")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 99
Reducing stack by rule 25 (line 141):
   $1 = nterm basetype ()
   $2 = token TOK_ARRAY ()
   $3 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 50 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 66
Reading a token: --accepting rule at line 51 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 101
Reading a token: --accepting rule at line 49 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 131
Reducing stack by rule 22 (line 120):
   $1 = nterm identdecl ()
   $2 = token '(' ()
   $3 = token ')' ()
   $4 = token ';' ()
Deleting astree (0x7b6160->{')' 5.37.19 ")":)
Deleting astree (0x7b61e0->{';' 5.37.20 ";":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 58):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 71 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 14 (line 94):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 78 ("exit")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 65
Reducing stack by rule 26 (line 146):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 50 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 66
Reading a token: --accepting rule at line 67 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 7
Reducing stack by rule 15 (line 95):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 28 66
Entering state 26
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 78 ("status")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 65
Reducing stack by rule 26 (line 146):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 66
Entering state 102
Reducing stack by rule 24 (line 135):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm params ()
Stack now 0 2 28
Entering state 68
Reading a token: --accepting rule at line 51 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 104
Reading a token: --accepting rule at line 49 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 134
Reducing stack by rule 21 (line 114):
   $1 = nterm identdecl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
Deleting astree (0x7b6530->{')' 5.38.22 ")":)
Deleting astree (0x7b65e0->{';' 5.38.23 ";":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 58):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 34 ("# 4 "11-numbers.oc" 2")
--accepting rule at line 36 ("
")
--accepting rule at line 36 ("
")
--accepting rule at line 67 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 7
Reducing stack by rule 15 (line 95):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 78 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 65
Reducing stack by rule 26 (line 146):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 44 ("=")
Next token is token '=' ()
Shifting token '=' ()
Entering state 67
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 75 ("1")
Next token is token TOK_INTCON ()
Shifting token TOK_INTCON ()
Entering state 16
Reducing stack by rule 77 (line 304):
   $1 = token TOK_INTCON ()
-> $$ = nterm constant ()
Stack now 0 2 28 67
Entering state 43
Reducing stack by rule 50 (line 230):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 28 67
Entering state 103
Reading a token: --accepting rule at line 49 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 133
Reducing stack by rule 38 (line 185):
   $1 = nterm identdecl ()
   $2 = token '=' ()
   $3 = nterm expr ()
   $4 = token ';' ()
-> $$ = nterm vardecl ()
Stack now 0 2
Entering state 32
Reducing stack by rule 33 (line 178):
   $1 = nterm vardecl ()
-> $$ = nterm statement ()
Stack now 0 2
Entering state 31
Reducing stack by rule 4 (line 59):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 65 ("while")
Next token is token TOK_WHILE ()
Shifting token TOK_WHILE ()
Entering state 10
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 50 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 47
Reading a token: --accepting rule at line 78 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 48
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 46 (">")
Next token is token TOK_GT ()
Reducing stack by rule 74 (line 293):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 10 47
Entering state 42
Reducing stack by rule 49 (line 229):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 10 47
Entering state 89
Next token is token TOK_GT ()
Shifting token TOK_GT ()
Entering state 75
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 75 ("0")
Next token is token TOK_INTCON ()
Shifting token TOK_INTCON ()
Entering state 16
Reducing stack by rule 77 (line 304):
   $1 = token TOK_INTCON ()
-> $$ = nterm constant ()
Stack now 0 2 10 47 89 75
Entering state 43
Reducing stack by rule 50 (line 230):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 10 47 89 75
Entering state 110
Reading a token: --accepting rule at line 51 (")")
Next token is token ')' ()
Reducing stack by rule 56 (line 238):
   $1 = nterm expr ()
   $2 = token TOK_GT ()
   $3 = nterm expr ()
-> $$ = nterm binop ()
Stack now 0 2 10 47
Entering state 37
Reducing stack by rule 44 (line 222):
   $1 = nterm binop ()
-> $$ = nterm expr ()
Stack now 0 2 10 47
Entering state 89
Next token is token ')' ()
Shifting token ')' ()
Entering state 122
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 54 ("{")
Next token is token '{' ()
Shifting token '{' ()
Entering state 20
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 35 ("   ")
--accepting rule at line 78 ("puti")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 15
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 50 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 56
Reading a token: --accepting rule at line 78 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 48
Reading a token: --accepting rule at line 51 (")")
Next token is token ')' ()
Reducing stack by rule 74 (line 293):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 10 47 89 122 20 15 56
Entering state 42
Reducing stack by rule 49 (line 229):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 10 47 89 122 20 15 56
Entering state 97
Next token is token ')' ()
Reducing stack by rule 73 (line 289):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
   $3 = nterm expr ()
-> $$ = nterm multiexpr ()
Stack now 0 2 10 47 89 122 20
Entering state 41
Next token is token ')' ()
Shifting token ')' ()
Entering state 86
Reducing stack by rule 71 (line 283):
   $1 = nterm multiexpr ()
   $2 = token ')' ()
Deleting astree (0x7b7040->{')' 6.7.16 ")":)
-> $$ = nterm call ()
Stack now 0 2 10 47 89 122 20
Entering state 40
Reducing stack by rule 47 (line 225):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2 10 47 89 122 20
Entering state 36
Reading a token: --accepting rule at line 49 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 78
Reducing stack by rule 37 (line 182):
   $1 = nterm expr ()
   $2 = token ';' ()
Deleting astree (0x7b7040->{';' 6.7.17 ";":)
-> $$ = nterm statement ()
Stack now 0 2 10 47 89 122 20
Entering state 60
Reducing stack by rule 31 (line 169):
   $1 = token '{' ()
   $2 = nterm statement ()
-> $$ = nterm statements ()
Stack now 0 2 10 47 89 122
Entering state 30
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 35 ("   ")
--accepting rule at line 78 ("putc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 15
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 50 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 56
Reading a token: --accepting rule at line 76 ("'\n'")
Next token is token TOK_CHARCON ()
Shifting token TOK_CHARCON ()
Entering state 17
Reducing stack by rule 78 (line 305):
   $1 = token TOK_CHARCON ()
-> $$ = nterm constant ()
Stack now 0 2 10 47 89 122 30 15 56
Entering state 43
Reducing stack by rule 50 (line 230):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 10 47 89 122 30 15 56
Entering state 97
Reading a token: --accepting rule at line 51 (")")
Next token is token ')' ()
Reducing stack by rule 73 (line 289):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
   $3 = nterm expr ()
-> $$ = nterm multiexpr ()
Stack now 0 2 10 47 89 122 30
Entering state 41
Next token is token ')' ()
Shifting token ')' ()
Entering state 86
Reducing stack by rule 71 (line 283):
   $1 = nterm multiexpr ()
   $2 = token ')' ()
Deleting astree (0x7b7220->{')' 6.8.14 ")":)
-> $$ = nterm call ()
Stack now 0 2 10 47 89 122 30
Entering state 40
Reducing stack by rule 47 (line 225):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2 10 47 89 122 30
Entering state 36
Reading a token: --accepting rule at line 49 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 78
Reducing stack by rule 37 (line 182):
   $1 = nterm expr ()
   $2 = token ';' ()
Deleting astree (0x7b7220->{';' 6.8.15 ";":)
-> $$ = nterm statement ()
Stack now 0 2 10 47 89 122 30
Entering state 70
Reducing stack by rule 30 (line 167):
   $1 = nterm statements ()
   $2 = nterm statement ()
-> $$ = nterm statements ()
Stack now 0 2 10 47 89 122
Entering state 30
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 35 ("   ")
--accepting rule at line 78 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 15
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 44 ("=")
Next token is token '=' ()
Reducing stack by rule 74 (line 293):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 10 47 89 122 30
Entering state 42
Reducing stack by rule 49 (line 229):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 10 47 89 122 30
Entering state 36
Next token is token '=' ()
Shifting token '=' ()
Entering state 80
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 78 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 48
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 38 ("+")
Next token is token '+' ()
Reducing stack by rule 74 (line 293):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 10 47 89 122 30 36 80
Entering state 42
Reducing stack by rule 49 (line 229):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 10 47 89 122 30 36 80
Entering state 114
Next token is token '+' ()
Shifting token '+' ()
Entering state 81
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 78 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 48
Reading a token: --accepting rule at line 49 (";")
Next token is token ';' ()
Reducing stack by rule 74 (line 293):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 10 47 89 122 30 36 80 114 81
Entering state 42
Reducing stack by rule 49 (line 229):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 10 47 89 122 30 36 80 114 81
Entering state 115
Next token is token ';' ()
Reducing stack by rule 58 (line 240):
   $1 = nterm expr ()
   $2 = token '+' ()
   $3 = nterm expr ()
-> $$ = nterm binop ()
Stack now 0 2 10 47 89 122 30 36 80
Entering state 37
Reducing stack by rule 44 (line 222):
   $1 = nterm binop ()
-> $$ = nterm expr ()
Stack now 0 2 10 47 89 122 30 36 80
Entering state 114
Next token is token ';' ()
Reducing stack by rule 51 (line 233):
   $1 = nterm expr ()
   $2 = token '=' ()
   $3 = nterm expr ()
-> $$ = nterm binop ()
Stack now 0 2 10 47 89 122 30
Entering state 37
Reducing stack by rule 44 (line 222):
   $1 = nterm binop ()
-> $$ = nterm expr ()
Stack now 0 2 10 47 89 122 30
Entering state 36
Next token is token ';' ()
Shifting token ';' ()
Entering state 78
Reducing stack by rule 37 (line 182):
   $1 = nterm expr ()
   $2 = token ';' ()
Deleting astree (0x7b7540->{';' 6.9.28 ";":)
-> $$ = nterm statement ()
Stack now 0 2 10 47 89 122 30
Entering state 70
Reducing stack by rule 30 (line 167):
   $1 = nterm statements ()
   $2 = nterm statement ()
-> $$ = nterm statements ()
Stack now 0 2 10 47 89 122
Entering state 30
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 55 ("}")
Next token is token '}' ()
Shifting token '}' ()
Entering state 69
Reducing stack by rule 27 (line 153):
   $1 = nterm statements ()
   $2 = token '}' ()
Deleting astree (0x7b7540->{'}' 6.10.1 "}":)
-> $$ = nterm block ()
Stack now 0 2 10 47 89 122
Entering state 29
Reducing stack by rule 32 (line 177):
   $1 = nterm block ()
-> $$ = nterm statement ()
Stack now 0 2 10 47 89 122
Entering state 139
Reducing stack by rule 39 (line 191):
   $1 = token TOK_WHILE ()
   $2 = token '(' ()
   $3 = nterm expr ()
   $4 = token ')' ()
   $5 = nterm statement ()
Deleting astree (0x7b6a80->{'(' 6.6.7 "(":)
Deleting astree (0x7b6d20->{')' 6.6.18 ")":)
-> $$ = nterm while ()
Stack now 0 2
Entering state 33
Reducing stack by rule 34 (line 179):
   $1 = nterm while ()
-> $$ = nterm statement ()
Stack now 0 2
Entering state 31
Reducing stack by rule 4 (line 59):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 78 ("puti")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 15
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 50 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 56
Reading a token: --accepting rule at line 78 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 48
Reading a token: --accepting rule at line 51 (")")
Next token is token ')' ()
Reducing stack by rule 74 (line 293):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 15 56
Entering state 42
Reducing stack by rule 49 (line 229):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 15 56
Entering state 97
Next token is token ')' ()
Reducing stack by rule 73 (line 289):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
   $3 = nterm expr ()
-> $$ = nterm multiexpr ()
Stack now 0 2
Entering state 41
Next token is token ')' ()
Shifting token ')' ()
Entering state 86
Reducing stack by rule 71 (line 283):
   $1 = nterm multiexpr ()
   $2 = token ')' ()
Deleting astree (0x7b76a0->{')' 6.11.13 ")":)
-> $$ = nterm call ()
Stack now 0 2
Entering state 40
Reducing stack by rule 47 (line 225):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2
Entering state 36
Reading a token: --accepting rule at line 49 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 78
Reducing stack by rule 37 (line 182):
   $1 = nterm expr ()
   $2 = token ';' ()
Deleting astree (0x7b76a0->{';' 6.11.14 ";":)
-> $$ = nterm statement ()
Stack now 0 2
Entering state 31
Reducing stack by rule 4 (line 59):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 78 ("putc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 15
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 50 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 56
Reading a token: --accepting rule at line 76 ("'\n'")
Next token is token TOK_CHARCON ()
Shifting token TOK_CHARCON ()
Entering state 17
Reducing stack by rule 78 (line 305):
   $1 = token TOK_CHARCON ()
-> $$ = nterm constant ()
Stack now 0 2 15 56
Entering state 43
Reducing stack by rule 50 (line 230):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 15 56
Entering state 97
Reading a token: --accepting rule at line 51 (")")
Next token is token ')' ()
Reducing stack by rule 73 (line 289):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
   $3 = nterm expr ()
-> $$ = nterm multiexpr ()
Stack now 0 2
Entering state 41
Next token is token ')' ()
Shifting token ')' ()
Entering state 86
Reducing stack by rule 71 (line 283):
   $1 = nterm multiexpr ()
   $2 = token ')' ()
Deleting astree (0x7b7840->{')' 6.12.11 ")":)
-> $$ = nterm call ()
Stack now 0 2
Entering state 40
Reducing stack by rule 47 (line 225):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2
Entering state 36
Reading a token: --accepting rule at line 49 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 78
Reducing stack by rule 37 (line 182):
   $1 = nterm expr ()
   $2 = token ';' ()
Deleting astree (0x7b7840->{';' 6.12.12 ";":)
-> $$ = nterm statement ()
Stack now 0 2
Entering state 31
Reducing stack by rule 4 (line 59):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Now at end of input.
Reducing stack by rule 1 (line 54):
   $1 = nterm program ()
-> $$ = nterm start ()
Stack now 0
Entering state 1
Now at end of input.
Shifting token $end ()
Entering state 3
Stack now 0 1 3
Cleanup: popping token $end ()
Cleanup: popping nterm start ()
